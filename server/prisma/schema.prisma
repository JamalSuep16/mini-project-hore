// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ORGANIZER
  ADMIN
}

enum Categories {
  Food
  Bussiness
  Arts
  Hobbies
}

model User {
  id             Int      @id @default(autoincrement())
  name           String
  username       String   @unique
  password       String
  email          String   @unique
  emailConfirmed Boolean  @default(false)
  role           Role     @default(USER)
  tickets        Ticket[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  ConfirmToken ConfirmToken[]
}

model ConfirmToken {
  id          Int      @id @default(autoincrement())
  token       String
  expiredDate DateTime
  used        Boolean  @default(false)
  createdAt   DateTime @default(now())
  userId      Int

  User User? @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Event {
  id          String   @id @default(uuid())
  title       String
  description String
  date        DateTime
  price       Float
  
  tickets     Ticket[]
}

model Ticket {
  id      String  @id @default(uuid())
  User    User?   @relation(fields: [userId], references: [id])
  userId  Int?
  Event   Event?  @relation(fields: [eventId], references: [id])
  eventId String?

model Events {
  id         Int        @id @default(autoincrement())
  title      String
  desc       String
  categories categories
  upcoming   Boolean
}

model Categories {
  id       Int        @id @default(autoincrement())
  name     Categories
  preview  String
  imageURL String
}

model Feedback {
  id          Int    @id @default(autoincrement())
  comments    String
  ratings     String
  suggestions String
}

model Badges {
  id                Int    @id @default(autoincrement())
  badgeName         String
  description       String
  iconUrl           String
  milestoneCriteria String
}

model Leaderboards {
  id           Int    @id @default(autoincrement())
  rank         String
  attendeeName String
}
