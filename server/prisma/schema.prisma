// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_LOCAL")
}

enum Role {
  USER
  ORGANIZER
  ADMIN
}

model User {
  id             Int      @id @default(autoincrement())
  name           String
  username       String   @unique
  password       String
  email          String   @unique
  emailConfirmed Boolean  @default(false)
  role           Role     @default(USER)
  referralCode   String?  @unique
  points         Int      @default(0)
  referrerId     Int?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  Referrer      User?          @relation("Referrals", fields: [referrerId], references: [id])
  ReferredUsers User[]         @relation("Referrals")
  Tickets       Ticket[]
  ConfirmToken  ConfirmToken[]
}

model ConfirmToken {
  id          Int      @id @default(autoincrement())
  token       String
  expiredDate DateTime
  used        Boolean  @default(false)
  createdAt   DateTime @default(now())
  userId      Int

  User User? @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Event {
  id          String   @id @default(uuid())
  title       String
  description String
  date        DateTime
  price       Float
  tickets     Ticket[]
}

model Ticket {
  id      String  @id @default(uuid())
  User    User?   @relation(fields: [userId], references: [id])
  userId  Int?
  Event   Event?  @relation(fields: [eventId], references: [id])
  eventId String?
}
